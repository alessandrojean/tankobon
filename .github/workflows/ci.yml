name: Continuous Integration

on:
  pull_request:
    paths-ignore:
      - 'client/locales/*'
      - '**.md'
      - 'docs/**'
  push:
    branches-ignore:
      - 'dependabot/**'
    paths-ignore:
      - 'client/locales/*'
      - 'docs/**'
  workflow_dispatch:

env:
  IMAGE_NAME: ${{ github.repository }}

jobs:
  validate-wrapper:
    runs-on: ubuntu-latest
    name: Validate Gradle Wrapper
    steps:
      - name: Clone repo
        uses: actions/checkout@v3
      - name: Validate
        uses: gradle/wrapper-validation-action@v1

  test-server:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [17, 19]
    name: Test server in JDK ${{ matrix.java }}
    needs: validate-wrapper
    steps:
      - name: Clone repo
        uses: actions/checkout@v3
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java }}
          java-package: 'jdk'
          distribution: 'temurin'
      - name: Run build
        uses: gradle/gradle-build-action@v2.4.2
        with:
          arguments: build
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results-jdk-${{ matrix.java }}
          path: server/build/test-results/
      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-reports-jdk-${{ matrix.java }}
          path: server/build/reports/tests/

  test-client:
    runs-on: ubuntu-latest
    name: Test client
    needs: validate-wrapper
    steps:
      - name: Clone repo
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '19'
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest
          run_install: false
      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/client/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install dependencies
        working-directory: client
        run: pnpm install
      - name: Run build
        working-directory: client
        run: pnpm build
      - name: Run tests
        working-directory: client
        run: pnpm test

  build-push-image:
    name: Build and push Docker image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: [test-client, test-server]
    if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
    steps:
      - name: Clone repository (latest)
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: metadata
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.IMAGE_NAME }}
            ghcr.io/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=nightly
            type=sha,prefix=,format=short
          labels: |
            org.opencontainers.image.title=Tankobon

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          build-args: |
            NIGHTLY=true
